@model UserProfileViewModel

@if (TempData["token"] != null)
{
    <script>
        sessionStorage.setItem("token", "@TempData["token"]");
    </script>
}

<section class="profile-section">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-10 col-12">

                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="alert alert-danger">
                        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                    </div>
                }

                <div id="messageContainer" class="mt-3 d-none">
                    <div id="messageContent" class="alert" role="alert"></div>
                </div>

                <!-- Profile Header -->
                <div class="profile-container">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <button class="btn btn-outline-primary" id="editModeBtn">
                            <i class="bi-pencil-square me-2"></i>
                            <span id="edit-btn-text">Edit Profile</span>
                        </button>
                        <a href="/User/ChangePassword" class="btn btn-outline-secondary">
                            <i class="bi-shield-lock-fill me-2"></i>
                            Change Password
                        </a>
                    </div>

                    <div class="profile-header text-center">
                        <div class="profile-picture-container mx-auto mb-3">
                            <img src="@(string.IsNullOrEmpty(Model.Profile?.Image) ? Url.Content("~/images/avatar.png") : Url.Content("https://localhost:7029" + Model.Profile.Image))"
                                 alt="Profile Picture"
                                 class="profile-picture"
                                 id="profilePicture">

                            <div class="profile-picture-upload" id="profileUploadTrigger">
                                <i class="bi-camera-fill"></i>
                            </div>

                            <input type="file" id="profilePictureInput" accept="image/*" class="d-none">
                        </div>
                        <h2 class="profile-username">@Model.UserName</h2>
                        <h2 class="profile-role">@Model.Role</h2>
                    </div>

                    <!-- Basic Information -->
                    <div class="row">
                        <div class="col-lg-6 col-12">
                            <div class="form-group">
                                <label for="username">Username</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi-person-badge"></i></span>
                                    <input type="text" id="username" class="form-control readonly-field" value="@Model.UserName" readonly>
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-6 col-12">
                            <div class="form-group">
                                <label for="phoneNumber">Phone Number</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi-telephone"></i></span>
                                    <input type="tel" id="phoneNumber" class="form-control readonly-field" value="@Model.PhoneNumber" readonly>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Bio Section -->
                    <div class="form-group">
                        <label for="bio">Bio</label>
                        <div class="input-group bio-input-group">
                            <span class="input-group-text bio-icon"><i class="bi-person-lines-fill"></i></span>
                            <textarea id="bio" class="form-control bio-textarea readonly-field" readonly>@Model.Profile?.Bio</textarea>
                        </div>
                    </div>
                </div>

                <!-- Save Button -->
                <div class="text-center mt-4">
                    <button class="btn btn-success d-none" id="saveBtn">
                        <i class="bi-check-circle me-2"></i>
                        Save Changes
                    </button>
                </div>

                <!-- Skills Section -->
                <div class="profile-container mt-4">
                    <h3 class="section-title">
                        <i class="bi-gear-fill"></i> Skills
                    </h3>
                    <div class="skills-container" id="skillsContainer">
                        @foreach (var skill in Model.Skills ?? new List<SkillViewModel>())
                        {
                            <div class="skill-tag">
                                @skill.Name
                                <button class="skill-remove d-none" data-skill="@skill.Name">×</button>
                            </div>
                        }
                        <div class="add-skill-btn d-none" id="addSkillBtn">
                            <i class="bi-plus-circle me-2"></i> Add Skill
                        </div>
                    </div>
                </div>

                <!-- Projects Section -->
                <div class="profile-container mt-4">
                    <h3 class="section-title">
                        <i class="bi-folder-fill"></i> Projects
                    </h3>
                    <div class="projects-container" id="projectsContainer">
                        @foreach (var project in Model.Projects ?? new List<ProjectViewModel>())
                        {
                            <div class="project-card">
                                <div class="d-flex justify-content-between align-items-start">
                                    <h4 class="project-title">@project.Title</h4>
                                    <button class="btn btn-sm btn-outline-danger project-remove d-none" data-project-id="@project.Id">×</button>
                                </div>
                                <p class="project-description">@project.Description</p>

                                @if (!string.IsNullOrEmpty(project.Attachments))
                                {
                                    var attachments = project.Attachments.Split(',');
                                    foreach (var attachment in attachments)
                                    {
                                        var trimmed = attachment.Trim();
                                        var isLink = trimmed.StartsWith("http");
                                        var icon = isLink ? "bi-box-arrow-up-right" :
                                        trimmed.EndsWith(".pdf") ? "bi-file-earmark-pdf" :
                                        "bi-file-earmark-code";

                                        <div class="project-attachment" data-url="@trimmed" data-islink="@isLink">
                                            <i class="@icon"></i>
                                            <span>@trimmed</span>
                                        </div>
                                    }
                                }
                            </div>
                        }

                        <div class="add-project-btn d-none" id="addProjectBtn">
                            <i class="bi-plus-circle"></i> <span>Add New Project</span>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</section>

<!-- Add Project Modal -->
<div class="modal fade" id="addProjectModal" tabindex="-1" aria-labelledby="addProjectModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form id="addProjectForm">
                <div class="modal-header">
                    <h5 class="modal-title" id="addProjectModalLabel">
                        <i class="bi-plus-circle me-2"></i> Add New Project
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="projectTitle" class="form-label">Title *</label>
                        <input type="text" class="form-control" id="projectTitle" name="projectTitle" required>
                    </div>
                    <div class="mb-3">
                        <label for="projectDescription" class="form-label">Description *</label>
                        <textarea class="form-control" id="projectDescription" name="projectDescription" rows="3" required></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="projectAttachments" class="form-label">Attachments</label>
                        <input type="text" class="form-control" id="projectAttachments" name="projectAttachments" placeholder="URLs or filenames">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary" id="saveProjectBtn">
                        <i class="bi-check-circle me-2"></i> Save Project
                    </button>
                </div>
            </form>

        </div>
    </div>
</div>

<!-- Add Skill Modal -->
<div class="modal fade" id="addSkillModal" tabindex="-1" aria-labelledby="addSkillModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="addSkillForm">
                <div class="modal-header">
                    <h5 class="modal-title" id="addSkillModalLabel">Add New Skill</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="skillSelect" class="form-label">Select Skill *</label>
                        <select id="skillSelect" name="skillSelect" class="form-select" required>
                            <option value="">-- Choose a skill --</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary" id="saveSkillBtn">Save Skill</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="~/css/User/profile.css" />
}

@section Scripts {
    <script src="~/js/User/profile.js"></script>
    @await Html.PartialAsync("_ValidationScriptsPartial")
}

<script>
    const userSkills = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Skills?.Select(s => s.Name) ?? new List<string>()));
</script>