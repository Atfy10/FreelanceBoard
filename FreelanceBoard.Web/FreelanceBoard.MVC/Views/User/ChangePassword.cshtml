@model ChangePasswordViewModel  
      
<style>
            .password-section {
                background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 50%, #a855f7 100%);
                min-height: 100vh;
                display: flex;
                align-items: center;
                padding: 80px 0;
            }

            .password-container {
                background: rgba(255, 255, 255, 0.95);
                backdrop-filter: blur(10px);
                border-radius: 20px;
                padding: 50px;
                box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
                max-width: 600px;
                width: 100%;
                margin: 0 auto;
                position: relative;
            }

            .password-header {
                text-align: center;
                margin-bottom: 40px;
            }

            .password-header .logo-container {
                width: 80px;
                height: 80px;
                background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 50%, #a855f7 100%);
                border-radius: 50%;
                display: flex;
                align-items: center;
                justify-content: center;
                margin: 0 auto 20px;
            }

            .password-header .logo-container i {
                font-size: 2rem;
                color: white;
            }

            .password-header h2 {
                color: #6366f1;
                font-weight: 700;
                margin-bottom: 10px;
            }

            .password-header p {
                color: #6c757d;
                margin-bottom: 0;
            }

            .back-to-profile {
                position: absolute;
                top: 20px;
                left: 20px;
                background: rgba(139, 92, 246, 0.1);
                border: none;
                color: #6366f1;
                padding: 10px 15px;
                border-radius: 25px;
                font-weight: 500;
                text-decoration: none;
                transition: all 0.3s ease;
                font-size: 14px;
            }

            .back-to-profile:hover {
                background: rgba(139, 92, 246, 0.2);
                color: #6366f1;
                text-decoration: none;
                transform: translateY(-2px);
            }

            .form-group {
                margin-bottom: 25px;
            }

            .form-group label {
                color: #6366f1;
                font-weight: 600;
                margin-bottom: 8px;
                display: block;
            }

            .input-group {
                position: relative;
            }

            .input-group .form-control {
                padding-left: 50px;
                padding-right: 50px;
                height: 55px;
                border: none;
                background: rgba(255, 255, 255, 0.8);
                border-radius: 10px;
                font-size: 16px;
                transition: all 0.3s ease;
                box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            }

            .input-group .form-control:focus {
                background: rgba(255, 255, 255, 1);
                box-shadow: 0 4px 20px rgba(139, 92, 246, 0.3);
                outline: none;
            }

            .input-group-text {
                position: absolute;
                left: 15px;
                top: 50%;
                transform: translateY(-50%);
                background: none;
                border: none;
                color: #6c757d;
                z-index: 10;
                font-size: 1.2rem;
            }

            .password-toggle-btn {
                position: absolute;
                right: 15px;
                top: 50%;
                transform: translateY(-50%);
                background: none;
                border: none;
                color: #6c757d;
                cursor: pointer;
                z-index: 10;
                font-size: 1.1rem;
                transition: color 0.3s ease;
            }

            .password-toggle-btn:hover {
                color: #6366f1;
            }

            .password-strength {
                margin-top: 8px;
                height: 4px;
                background: rgba(139, 92, 246, 0.1);
                border-radius: 2px;
                overflow: hidden;
                transition: all 0.3s ease;
            }

            .password-strength-bar {
                height: 100%;
                transition: all 0.3s ease;
                border-radius: 2px;
            }

            .strength-weak { background: #ef4444; width: 25%; }
            .strength-fair { background: #f59e0b; width: 50%; }
            .strength-good { background: #10b981; width: 75%; }
            .strength-strong { background: #6366f1; width: 100%; }

            .password-requirements {
                margin-top: 15px;
                padding: 15px;
                background: rgba(139, 92, 246, 0.05);
                border-radius: 10px;
                font-size: 0.85rem;
            }

            .requirements-title {
                color: #6366f1;
                font-weight: 600;
                margin-bottom: 10px;
                font-size: 0.9rem;
            }

            .requirement {
                display: flex;
                align-items: center;
                gap: 8px;
                margin-bottom: 6px;
                transition: color 0.3s ease;
                color: #6c757d;
            }

            .requirement.met {
                color: #10b981;
            }

            .requirement i {
                font-size: 0.8rem;
            }

            .change-password-btn {
                background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 50%, #a855f7 100%);
                border: none;
                color: white;
                padding: 15px 40px;
                border-radius: 10px;
                font-weight: 600;
                font-size: 16px;
                transition: all 0.3s ease;
                margin-top: 30px;
                width: 100%;
            }

            .change-password-btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 10px 20px rgba(99, 102, 241, 0.3);
                color: white;
            }

            .change-password-btn:disabled {
                background: #6c757d;
                cursor: not-allowed;
                transform: none;
                box-shadow: none;
            }

            .password-match-message {
                margin-top: 8px;
                font-size: 0.85rem;
                display: flex;
                align-items: center;
                gap: 5px;
            }

            .success-message {
                background: rgba(16, 185, 129, 0.1);
                border: 1px solid rgba(16, 185, 129, 0.3);
                color: #10b981;
                padding: 15px;
                border-radius: 10px;
                margin-top: 20px;
                display: none;
                align-items: center;
                gap: 10px;
            }

            .error-message {
                background: rgba(239, 68, 68, 0.1);
                border: 1px solid rgba(239, 68, 68, 0.3);
                color: #ef4444;
                padding: 15px;
                border-radius: 10px;
                margin-top: 20px;
                display: none;
                align-items: center;
                gap: 10px;
            }

                .back-to-profile {
                    position: static;
                    display: inline-block;
                    margin-bottom: 20px;
                }
            }
        </style>

<section class="password-section">
                <div class="container">
                    <div class="row justify-content-center">
                        <div class="col-lg-8 col-md-10 col-12">
                            <div class="password-container">
                                <a href="/User/Profile" class="back-to-profile">
                                    <i class="bi-arrow-left me-2"></i>
                                    Back to Profile
                                </a>

                                <div class="password-header">
                                    <div class="logo-container">
                                        <i class="bi-shield-lock-fill"></i>
                                    </div>
                                    <h2>Change Password</h2>
                                    <p>Update your password to keep your account secure</p>
                                </div>

                                    <form asp-action="ChangePassword" asp-controller="User" method="post" id="changePasswordForm">
                                    @Html.AntiForgeryToken()
                                    <!-- Hidden input for UserId -->
                                    <input type="hidden" name="UserId" id="UserId" />

                                    <div class="form-group">
                                        <label for="currentPassword">Current Password</label>
                                        <div class="input-group">
                                            <span class="input-group-text"><i class="bi-lock-fill"></i></span>
                                            <input asp-for="CurrentPassword" class="form-control" placeholder="Enter your current password">
                                            <button type="button" class="password-toggle-btn" onclick="togglePasswordVisibility('currentPassword')">
                                                <i class="bi-eye" id="currentPassword-eye"></i>
                                            </button>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <label for="newPassword">New Password</label>
                                        <div class="input-group">
                                            <span class="input-group-text"><i class="bi-key-fill"></i></span>
                                            <input asp-for="NewPassword" class="form-control" placeholder="Enter new password" oninput="checkPasswordStrength()">
                                            <button type="button" class="password-toggle-btn" onclick="togglePasswordVisibility('newPassword')">
                                                <i class="bi-eye" id="newPassword-eye"></i>
                                            </button>
                                        </div>
                                        <div class="password-strength" id="passwordStrength">
                                            <div class="password-strength-bar" id="passwordStrengthBar"></div>
                                        </div>
                                        <div class="password-requirements">
                                            <div class="requirements-title">Password Requirements:</div>
                                            <div class="requirement" id="req-length">
                                                <i class="bi-x-circle"></i>
                                                <span>At least 8 characters</span>
                                            </div>
                                            <div class="requirement" id="req-uppercase">
                                                <i class="bi-x-circle"></i>
                                                <span>One uppercase letter</span>
                                            </div>
                                            <div class="requirement" id="req-lowercase">
                                                <i class="bi-x-circle"></i>
                                                <span>One lowercase letter</span>
                                            </div>
                                            <div class="requirement" id="req-number">
                                                <i class="bi-x-circle"></i>
                                                <span>One number</span>
                                            </div>
                                            <div class="requirement" id="req-special">
                                                <i class="bi-x-circle"></i>
                                                <span>One special character</span>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <label for="confirmNewPassword">Confirm New Password</label>
                                        <div class="input-group">
                                            <span class="input-group-text"><i class="bi-key-fill"></i></span>
                                            <input asp-for ="ConfirmNewPassword" class="form-control" placeholder="Confirm new password" oninput="checkPasswordMatch()">
                                            <button type="button" class="password-toggle-btn" onclick="togglePasswordVisibility('confirmNewPassword')">
                                                <i class="bi-eye" id="confirmNewPassword-eye"></i>
                                            </button>
                                        </div>
                                        <div class="password-match-message" id="passwordMatchMessage"></div>
                                    </div>

                                    <button type="submit" class="change-password-btn" id="changePasswordBtn">
                                        <i class="bi-shield-check me-2"></i>
                                        Update Password
                                    </button>
                                </form>

                                <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                                <div class="success-message" id="successMessage">
                                    <i class="bi-check-circle-fill"></i>
                                    <span>Password changed successfully!</span>
                                </div>

                                <div class="error-message" id="errorMessage">
                                    <i class="bi-exclamation-triangle-fill"></i>
                                    <span id="errorText">An error occurred. Please try again.</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>

        <script>
    function togglePasswordVisibility(fieldName) {
        const field = document.querySelector(`[name="${fieldName}"]`);
        const eye = document.getElementById(fieldName.toLowerCase() + '-eye');

        if (!field || !eye) return;

        if (field.type === 'password') {
            field.type = 'text';
            eye.className = 'bi-eye-slash';
        } else {
            field.type = 'password';
            eye.className = 'bi-eye';
        }
    }

    function togglePasswordVisibility(fieldName) {
        const input = document.querySelector(`[name="${fieldName}"]`);
        const eyeIcon = document.getElementById(fieldName.toLowerCase() + '-eye');

        if (!input || !eyeIcon) return;

        if (input.type === 'password') {
            input.type = 'text';
            eyeIcon.classList.remove('bi-eye');
            eyeIcon.classList.add('bi-eye-slash');
        } else {
            input.type = 'password';
            eyeIcon.classList.remove('bi-eye-slash');
            eyeIcon.classList.add('bi-eye');
        }
    }


    function checkPasswordStrength() {
        const passwordInput = document.querySelector('[name="NewPassword"]');
        const password = passwordInput?.value || '';
        const strengthBar = document.getElementById('passwordStrengthBar');

        const requirements = {
            length: password.length >= 8,
            uppercase: /[A-Z]/.test(password),
            lowercase: /[a-z]/.test(password),
            number: /\d/.test(password),
            special: /[!#$%^&*(),.?":{}|<>]/.test(password)
        };

        // Update requirement icons
        Object.entries(requirements).forEach(([key, passed]) => {
            const item = document.getElementById(`req-${key}`);
            const icon = item?.querySelector('i');
            if (!icon) return;

            if (passed) {
                item.classList.add('met');
                icon.className = 'bi-check-circle-fill';
            } else {
                item.classList.remove('met');
                icon.className = 'bi-x-circle';
            }
        });

        // Strength bar class update
        const passedCount = Object.values(requirements).filter(Boolean).length;
        const classes = ['strength-weak', 'strength-fair', 'strength-good', 'strength-strong'];
        strengthBar.className = 'password-strength-bar ' + (classes[passedCount - 1] || '');

        checkPasswordMatch();
    }

    function checkPasswordMatch() {
        const newPassword = document.querySelector('[name="NewPassword"]')?.value || '';
        const confirmPassword = document.querySelector('[name="ConfirmNewPassword"]')?.value || '';
        const currentPassword = document.querySelector('[name="CurrentPassword"]')?.value || '';
        const messageDiv = document.getElementById('passwordMatchMessage');
        const changeBtn = document.getElementById('changePasswordBtn');

        if (!confirmPassword) {
            messageDiv.innerHTML = '';
            changeBtn.disabled = true;
            return;
        }

        if (newPassword === confirmPassword) {
            messageDiv.innerHTML = `<span style="color: #10b981;"><i class="bi-check-circle-fill me-1"></i>Passwords match</span>`;
            const allRequirementsMet = document.querySelectorAll('.requirement.met').length === 5;
            const currentFilled = currentPassword.length > 0;
            changeBtn.disabled = !(allRequirementsMet && currentFilled);
        } else {
            messageDiv.innerHTML = `<span style="color: #ef4444;"><i class="bi-x-circle-fill me-1"></i>Passwords do not match</span>`;
            changeBtn.disabled = true;
        }
    }

    function showMessage(type, message) {
        const successMsg = document.getElementById('successMessage');
        const errorMsg = document.getElementById('errorMessage');

        successMsg.style.display = 'none';
        errorMsg.style.display = 'none';

        if (type === 'success') {
            successMsg.style.display = 'flex';
            setTimeout(() => { successMsg.style.display = 'none'; }, 5000);
        } else if (type === 'error') {
            document.getElementById('errorText').textContent = message;
            errorMsg.style.display = 'flex';
            setTimeout(() => { errorMsg.style.display = 'none'; }, 5000);
        }
    }
    
    document.addEventListener('DOMContentLoaded', function () {
        const userId = localStorage.getItem("userId");
        if (userId) {
            document.getElementById("UserId").value = userId;
        } else {
            console.error("User ID not found in localStorage");
        }
    });
    

    // Watch current password input to re-check form validity
    document.querySelector('[name="CurrentPassword"]').addEventListener('input', checkPasswordMatch);
</script>

