@model List<ClientDashboardViewModel>

<style>
            .dashboard-section {
                background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 50%, #a855f7 100%);
                min-height: 100vh;
                padding: 80px 0;
            }

            .dashboard-container {
                background: rgba(255, 255, 255, 0.95);
                backdrop-filter: blur(10px);
                border-radius: 20px;
                padding: 40px;
                box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
                margin-bottom: 30px;
            }

            .dashboard-header {
                text-align: center;
                margin-bottom: 40px;
            }

            .dashboard-title {
                color: #6366f1;
                font-weight: 700;
                font-size: 2.5rem;
                margin-bottom: 10px;
            }

            .dashboard-subtitle {
                color: #6c757d;
                font-size: 1.1rem;
            }

            .stats-row {
                margin-bottom: 40px;
            }

            .stat-card {
                background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 100%);
                color: white;
                border-radius: 15px;
                padding: 25px;
                text-align: center;
                transition: all 0.3s ease;
                border: none;
            }

            .stat-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 10px 30px rgba(99, 102, 241, 0.3);
            }

            .stat-number {
                font-size: 2.5rem;
                font-weight: 700;
                margin-bottom: 5px;
            }

            .stat-label {
                font-size: 1rem;
                opacity: 0.9;
            }

            .create-job-btn {
                background: linear-gradient(135deg, #10b981 0%, #059669 100%);
                border: none;
                color: white;
                padding: 15px 30px;
                border-radius: 25px;
                font-weight: 600;
                font-size: 16px;
                transition: all 0.3s ease;
                text-decoration: none;
                display: inline-flex;
                align-items: center;
                gap: 10px;
                margin-bottom: 30px;
            }

            .create-job-btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 8px 20px rgba(16, 185, 129, 0.3);
                color: white;
                text-decoration: none;
            }

            .job-card {
                background: rgba(255, 255, 255, 0.8);
                border-radius: 15px;
                padding: 25px;
                margin-bottom: 20px;
                box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
                transition: all 0.3s ease;
                border: none;
            }

            .job-card:hover {
                transform: translateY(-3px);
                box-shadow: 0 10px 25px rgba(139, 92, 246, 0.2);
            }

            .job-card-header {
                display: flex;
                justify-content: between;
                align-items: flex-start;
                margin-bottom: 15px;
            }

            .job-title {
                color: #6366f1;
                font-weight: 700;
                font-size: 1.4rem;
                margin-bottom: 5px;
            }

            .job-category {
                background: rgba(139, 92, 246, 0.1);
                color: #6366f1;
                padding: 4px 12px;
                border-radius: 15px;
                font-size: 0.85rem;
                font-weight: 500;
            }

            .job-description {
                color: #6c757d;
                margin-bottom: 20px;
                line-height: 1.6;
            }

            .job-meta {
                display: flex;
                flex-wrap: wrap;
                gap: 20px;
                margin-bottom: 20px;
                align-items: center;
            }

            .job-meta-item {
                display: flex;
                align-items: center;
                gap: 8px;
                color: #6c757d;
                font-size: 0.9rem;
            }

            .job-meta-item i {
                color: #6366f1;
                font-size: 1rem;
            }

            .job-price {
                color: #10b981;
                font-weight: 700;
                font-size: 1.2rem;
            }

            .job-status {
                padding: 6px 12px;
                border-radius: 20px;
                font-size: 0.8rem;
                font-weight: 600;
                text-transform: uppercase;
            }

            .status-active {
                background: rgba(16, 185, 129, 0.1);
                color: #10b981;
            }

            .status-paused {
                background: rgba(245, 158, 11, 0.1);
                color: #f59e0b;
            }

            .status-closed {
                background: rgba(239, 68, 68, 0.1);
                color: #ef4444;
            }

            .job-actions {
                display: flex;
                gap: 10px;
                flex-wrap: wrap;
            }

            .action-btn {
                padding: 8px 16px;
                border-radius: 20px;
                border: none;
                font-size: 0.85rem;
                font-weight: 500;
                cursor: pointer;
                transition: all 0.3s ease;
                text-decoration: none;
                display: inline-flex;
                align-items: center;
                gap: 6px;
            }

            .btn-view {
                background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 100%);
                color: white;
            }

            .btn-view:hover {
                transform: translateY(-2px);
                box-shadow: 0 5px 15px rgba(99, 102, 241, 0.3);
                color: white;
                text-decoration: none;
            }

            .btn-edit {
                background: linear-gradient(135deg, #10b981 0%, #059669 100%);
                color: white;
            }

            .btn-edit:hover {
                transform: translateY(-2px);
                box-shadow: 0 5px 15px rgba(16, 185, 129, 0.3);
                color: white;
            }

            .btn-delete {
                background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
                color: white;
            }

            .btn-delete:hover {
                transform: translateY(-2px);
                box-shadow: 0 5px 15px rgba(239, 68, 68, 0.3);
                color: white;
            }

            .proposals-count {
                background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
                color: white;
                padding: 4px 8px;
                border-radius: 12px;
                font-size: 0.75rem;
                font-weight: 600;
                margin-left: 8px;
            }

            .empty-state {
                text-align: center;
                padding: 60px 20px;
                color: #6c757d;
            }

            .empty-state i {
                font-size: 4rem;
                color: #d1d5db;
                margin-bottom: 20px;
            }

            .empty-state h4 {
                color: #6366f1;
                margin-bottom: 15px;
            }

            .filter-tabs {
                display: flex;
                gap: 10px;
                margin-bottom: 30px;
                flex-wrap: wrap;
            }

            .filter-tab {
                padding: 10px 20px;
                border: 2px solid rgba(139, 92, 246, 0.2);
                background: transparent;
                color: #6366f1;
                border-radius: 25px;
                cursor: pointer;
                transition: all 0.3s ease;
                font-weight: 500;
            }

            .filter-tab.active {
                background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 100%);
                color: white;
                border-color: transparent;
            }

            .filter-tab:hover {
                background: rgba(139, 92, 246, 0.1);
            }

            .filter-tab.active:hover {
                background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 100%);
            }
        </style>

    <section class="dashboard-section">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-lg-12 col-12">
                    <!-- Dashboard Header  -->
                    <div class="dashboard-container">
                        <div class="dashboard-header">
                            <h1 class="dashboard-title">My Posted Jobs</h1>
                            <p class="dashboard-subtitle">Manage your job postings and view applications</p>
                        </div>

                        <!-- Stats Row  -->
                        <div class="row stats-row">
                            <div class="col-lg-3 col-md-6 col-12 mb-3">
                                <div class="stat-card">
                                    <div class="stat-number" id="totalJobs">5</div>
                                    <div class="stat-label">Total Jobs</div>
                                </div>
                            </div>
                            <div class="col-lg-3 col-md-6 col-12 mb-3">
                                <div class="stat-card">
                                    <div class="stat-number" id="activeJobs">3</div>
                                    <div class="stat-label">Active Jobs</div>
                                </div>
                            </div>
                            <div class="col-lg-3 col-md-6 col-12 mb-3">
                                <div class="stat-card">
                                    <div class="stat-number" id="totalProposals">24</div>
                                    <div class="stat-label">Total Proposals</div>
                                </div>
                            </div>
                            <div class="col-lg-3 col-md-6 col-12 mb-3">
                                <div class="stat-card">
                                    <div class="stat-number" id="hiredFreelancers">2</div>
                                    <div class="stat-label">Hired</div>
                                </div>
                            </div>
                        </div>

                        <!-- Create New Job Button  -->
                        <div class="text-center">
                            <a href="job-listings.html" class="create-job-btn">
                                <i class="bi-plus-circle"></i>
                                Post New Job
                            </a>
                        </div>
                    </div>

                    <!-- Jobs List  -->
                    <div class="dashboard-container">
                        <!-- Filter Tabs  -->
                        <div class="filter-tabs">
                            <button class="filter-tab active" onclick="filterJobs('all')">All Jobs</button>
                            <button class="filter-tab" onclick="filterJobs('active')">Active</button>
                            <button class="filter-tab" onclick="filterJobs('paused')">Paused</button>
                        </div>

                        <div id="jobsContainer">
                            @if (Model.Any())
                            {
                                foreach (var job in Model)
                                {
                                    <div class="job-card" data-status="active">
                                        <div class="job-card-header">
                                            <div class="flex-grow-1">
                                                <h3 class="job-title">@job.Title</h3>
                                                <span class="job-category">
                                                    @string.Join(", ", job.Categories.Select(c => c.Name))
                                                </span>
                                            </div>
                                            <span class="job-status status-active">Active</span>
                                        </div>

                                        <p class="job-description">@job.Description</p>

                                        <div class="job-meta">
                                            <div class="job-meta-item">
                                                <i class="bi-cash"></i>
                                                <span class="job-price">@job.Price.ToString("C")</span>
                                            </div>
                                            <div class="job-meta-item">
                                                <i class="bi-calendar"></i>
                                                <span>Posted @job.DateCreated.ToShortDateString()</span>
                                            </div>
                                            <div class="job-meta-item">
                                                <i class="bi-eye"></i>
                                                <span>@job.Proposals.Count views</span>
                                            </div>
                                        </div>

                                        <div class="job-actions">
                                            <a href="/Job/JobProposal?id=@job.Id" class="action-btn btn-view">
                                                <i class="bi-people"></i>
                                                View Proposals
                                                <span class="proposals-count">@job.Proposals.Count</span>
                                            </a>
                                            <button class="action-btn btn-edit">
                                                <i class="bi-pencil"></i>
                                                Edit
                                            </button>
                                            <button class="action-btn btn-delete">
                                                <i class="bi-trash"></i>
                                                Delete
                                            </button>
                                        </div>
                                    </div>
                                }
                            }
                            else
                            {
                                <div id="emptyState" class="empty-state">
                                    <i class="bi-briefcase"></i>
                                    <h4>No Jobs Found</h4>
                                    <p>You haven't posted any jobs yet. Create your first job posting to get started!</p>
                                    <a href="/Job/Create" class="create-job-btn">
                                        <i class="bi-plus-circle"></i>
                                        Post Your First Job
                                    </a>
                                </div>
                            }
                        </div>
                    </div>
                    </div>
                </div>
            </div>
    </section>

<script>
    // Sample client jobs data
    let clientJobs = [
        {
            id: 1,
            title: "Senior Full Stack Developer",
            category: "Technology",
            description: "Looking for an experienced full-stack developer to build a modern e-commerce platform using React, Node.js, and MongoDB. Must have 5+ years of experience.",
            price: "75000-95000",
            location: "Remote",
            status: "active",
            postedDate: "3 days ago",
            views: 156,
            proposalsCount: 8
        },
        {
            id: 2,
            title: "UI/UX Designer",
            category: "Design",
            description: "Seeking a creative UI/UX designer to redesign our mobile app interface. Experience with Figma and user research required.",
            price: "45000-60000",
            location: "New York, NY",
            status: "active",
            postedDate: "1 week ago",
            views: 89,
            proposalsCount: 12
        },
        {
            id: 3,
            title: "Content Writer",
            category: "Marketing",
            description: "Looking for a skilled content writer to create blog posts and marketing materials. SEO knowledge preferred.",
            price: "30000-40000",
            location: "Remote",
            status: "paused",
            postedDate: "2 weeks ago",
            views: 67,
            proposalsCount: 4
        }
    ];

    // Filter jobs by status
    function filterJobs(status) {
        const jobCards = document.querySelectorAll('.job-card');
        const filterTabs = document.querySelectorAll('.filter-tab');
        const jobsContainer = document.getElementById('jobsContainer');
        const emptyState = document.getElementById('emptyState');

        // Update active tab
        filterTabs.forEach(tab => tab.classList.remove('active'));
        event.target.classList.add('active');

        let visibleCount = 0;

        jobCards.forEach(card => {
            const cardStatus = card.getAttribute('data-status');
            if (status === 'all' || cardStatus === status) {
                card.style.display = 'block';
                visibleCount++;
            } else {
                card.style.display = 'none';
            }
        });

        // Show empty state if no jobs visible
        if (visibleCount === 0) {
            emptyState.style.display = 'block';
        } else {
            emptyState.style.display = 'none';
        }
    }

    // Edit job function
    function editJob(jobId) {
        // In a real application, you would redirect to an edit form
        // or open a modal with the job data pre-filled
        alert(`Edit job with ID: ${jobId}`);
        // Example: window.location.href = `edit-job.html?id=${jobId}`;
    }

    // Delete job function
    function deleteJob(jobId) {
        if (confirm('Are you sure you want to delete this job? This action cannot be undone.')) {
            // In a real application, you would make an API call to delete the job
            alert(`Job ${jobId} deleted successfully!`);

            // Remove the job card from the DOM
            const jobCard = document.querySelector(`[data-job-id="${jobId}"]`);
            if (jobCard) {
                jobCard.remove();
            }

            // Update statistics
            updateStats();
        }
    }

    // Update statistics
    function updateStats() {
        const totalJobs = clientJobs.length;
        const activeJobs = clientJobs.filter(job => job.status === 'active').length;
        const totalProposals = clientJobs.reduce((sum, job) => sum + job.proposalsCount, 0);
        const hiredFreelancers = 2; // This would come from your backend

        document.getElementById('totalJobs').textContent = totalJobs;
        document.getElementById('activeJobs').textContent = activeJobs;
        document.getElementById('totalProposals').textContent = totalProposals;
        document.getElementById('hiredFreelancers').textContent = hiredFreelancers;
    }

    // Initialize page
    document.addEventListener('DOMContentLoaded', function () {
        updateStats();
    });
</script>