@model List<JobWithProposalsViewModel>

<style>
            .dashboard-section {
                background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 50%, #a855f7 100%);
                min-height: 100vh;
                padding: 80px 0;
            }

            .dashboard-container {
                background: rgba(255, 255, 255, 0.95);
                backdrop-filter: blur(10px);
                border-radius: 20px;
                padding: 40px;
                box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
                margin-bottom: 30px;
            }

            .dashboard-header {
                text-align: center;
                margin-bottom: 40px;
            }

            .dashboard-title {
                color: #6366f1;
                font-weight: 700;
                font-size: 2.5rem;
                margin-bottom: 10px;
            }

            .dashboard-subtitle {
                color: #6c757d;
                font-size: 1.1rem;
            }

            .stats-row {
                margin-bottom: 40px;
            }

            .stat-card {
                background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 100%);
                color: white;
                border-radius: 15px;
                padding: 25px;
                text-align: center;
                transition: all 0.3s ease;
                border: none;
            }

            .stat-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 10px 30px rgba(99, 102, 241, 0.3);
            }

            .stat-card.accepted {
                background: linear-gradient(135deg, #10b981 0%, #059669 100%);
            }

            .stat-card.rejected {
                background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
            }

            .stat-card.pending {
                background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
            }

            .stat-number {
                font-size: 2.5rem;
                font-weight: 700;
                margin-bottom: 5px;
            }

            .stat-label {
                font-size: 1rem;
                opacity: 0.9;
            }

            .browse-jobs-btn {
                background: linear-gradient(135deg, #10b981 0%, #059669 100%);
                border: none;
                color: white;
                padding: 15px 30px;
                border-radius: 25px;
                font-weight: 600;
                font-size: 16px;
                transition: all 0.3s ease;
                text-decoration: none;
                display: inline-flex;
                align-items: center;
                gap: 10px;
                margin-bottom: 30px;
            }

            .browse-jobs-btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 8px 20px rgba(16, 185, 129, 0.3);
                color: white;
                text-decoration: none;
            }

            .application-card {
                background: rgba(255, 255, 255, 0.8);
                border-radius: 15px;
                padding: 25px;
                margin-bottom: 20px;
                box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
                transition: all 0.3s ease;
                border: none;
                position: relative;
            }

            .application-card:hover {
                transform: translateY(-3px);
                box-shadow: 0 10px 25px rgba(139, 92, 246, 0.2);
            }

            .application-header {
                display: flex;
                justify-content: space-between;
                align-items: flex-start;
                margin-bottom: 15px;
                flex-wrap: wrap;
                gap: 15px;
            }

            .job-info {
                flex: 1;
            }

            .job-title {
                color: #6366f1;
                font-weight: 700;
                font-size: 1.4rem;
                margin-bottom: 5px;
            }

            .company-name {
                color: #6c757d;
                font-size: 1rem;
                margin-bottom: 10px;
            }

            .job-category {
                background: rgba(139, 92, 246, 0.1);
                color: #6366f1;
                padding: 4px 12px;
                border-radius: 15px;
                font-size: 0.85rem;
                font-weight: 500;
                display: inline-block;
            }

            .application-status {
                text-align: right;
            }

            .status-badge {
                padding: 8px 16px;
                border-radius: 20px;
                font-size: 0.9rem;
                font-weight: 600;
                text-transform: uppercase;
                margin-bottom: 10px;
                display: inline-block;
            }

            .status-pending {
                background: rgba(245, 158, 11, 0.1);
                color: #f59e0b;
                border: 2px solid rgba(245, 158, 11, 0.3);
            }

            .status-accepted {
                background: rgba(16, 185, 129, 0.1);
                color: #10b981;
                border: 2px solid rgba(16, 185, 129, 0.3);
            }

            .status-rejected {
                background: rgba(239, 68, 68, 0.1);
                color: #ef4444;
                border: 2px solid rgba(239, 68, 68, 0.3);
            }

            .application-date {
                color: #6c757d;
                font-size: 0.9rem;
            }

            .proposal-details {
                background: rgba(139, 92, 246, 0.05);
                padding: 20px;
                border-radius: 10px;
                margin: 15px 0;
                border-left: 4px solid #6366f1;
            }

            .proposal-meta {
                display: flex;
                flex-wrap: wrap;
                gap: 20px;
                margin-bottom: 15px;
                align-items: center;
            }

            .meta-item {
                display: flex;
                align-items: center;
                gap: 8px;
                color: #6c757d;
                font-size: 0.9rem;
            }

            .meta-item i {
                color: #6366f1;
                font-size: 1rem;
            }

            .proposed-price {
                color: #10b981;
                font-weight: 700;
                font-size: 1.2rem;
            }

            .proposal-message {
                color: #4b5563;
                line-height: 1.6;
                margin-bottom: 15px;
            }

            .application-actions {
                display: flex;
                gap: 10px;
                flex-wrap: wrap;
                margin-top: 20px;
            }

            .action-btn {
                padding: 8px 16px;
                border-radius: 20px;
                border: none;
                font-size: 0.85rem;
                font-weight: 500;
                cursor: pointer;
                transition: all 0.3s ease;
                text-decoration: none;
                display: inline-flex;
                align-items: center;
                gap: 6px;
            }

            .btn-view-job {
                background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 100%);
                color: white;
            }

            .btn-view-job:hover {
                transform: translateY(-2px);
                box-shadow: 0 5px 15px rgba(99, 102, 241, 0.3);
                color: white;
                text-decoration: none;
            }

            .btn-message {
                background: linear-gradient(135deg, #10b981 0%, #059669 100%);
                color: white;
            }

            .btn-message:hover {
                transform: translateY(-2px);
                box-shadow: 0 5px 15px rgba(16, 185, 129, 0.3);
                color: white;
            }

            .btn-withdraw {
                background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
                color: white;
            }

            .btn-withdraw:hover {
                transform: translateY(-2px);
                box-shadow: 0 5px 15px rgba(239, 68, 68, 0.3);
                color: white;
            }

            .btn-edit {
                background: transparent;
                color: #6366f1;
                border: 2px solid #6366f1;
            }

            .btn-edit:hover {
                background: #6366f1;
                color: white;
            }

            .filter-tabs {
                display: flex;
                gap: 10px;
                margin-bottom: 30px;
                flex-wrap: wrap;
            }

            .filter-tab {
                padding: 10px 20px;
                border: 2px solid rgba(139, 92, 246, 0.2);
                background: transparent;
                color: #6366f1;
                border-radius: 25px;
                cursor: pointer;
                transition: all 0.3s ease;
                font-weight: 500;
            }

            .filter-tab.active {
                background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 100%);
                color: white;
                border-color: transparent;
            }

            .filter-tab:hover {
                background: rgba(139, 92, 246, 0.1);
            }

            .filter-tab.active:hover {
                background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 100%);
            }

            .empty-state {
                text-align: center;
                padding: 60px 20px;
                color: #6c757d;
            }

            .empty-state i {
                font-size: 4rem;
                color: #d1d5db;
                margin-bottom: 20px;
            }

            .empty-state h4 {
                color: #6366f1;
                margin-bottom: 15px;
            }

            .client-feedback {
                background: rgba(16, 185, 129, 0.05);
                border: 1px solid rgba(16, 185, 129, 0.2);
                border-radius: 10px;
                padding: 15px;
                margin-top: 15px;
            }

            .client-feedback h6 {
                color: #10b981;
                font-weight: 600;
                margin-bottom: 8px;
            }

            .client-feedback p {
                color: #4b5563;
                margin: 0;
                font-size: 0.9rem;
            }

            .rejection-reason {
                background: rgba(239, 68, 68, 0.05);
                border: 1px solid rgba(239, 68, 68, 0.2);
                border-radius: 10px;
                padding: 15px;
                margin-top: 15px;
            }

            .rejection-reason h6 {
                color: #ef4444;
                font-weight: 600;
                margin-bottom: 8px;
            }

            .rejection-reason p {
                color: #4b5563;
                margin: 0;
                font-size: 0.9rem;
            }

            .success-indicator {
                position: absolute;
                top: 15px;
                right: 15px;
                width: 12px;
                height: 12px;
                border-radius: 50%;
                background: #10b981;
                animation: pulse 2s infinite;
            }
        </style>

<section class="dashboard-section">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-12 col-12">
                <!-- Dashboard Header -->
                <div class="dashboard-container">
                    <div class="dashboard-header">
                        <h1 class="dashboard-title">My Applications</h1>
                        <p class="dashboard-subtitle">Track your job applications and manage your proposals</p>
                    </div>

                    <!-- Stats Row -->
                    <div class="row stats-row">
                        <div class="col-lg-3 col-md-6 col-12 mb-3">
                            <div class="stat-card">
                                <div class="stat-number">@Model.Count</div>
                                <div class="stat-label">Total Applications</div>
                            </div>
                        </div>
                        <div class="col-lg-3 col-md-6 col-12 mb-3">
                            <div class="stat-card pending">
                                <div class="stat-number">@Model.Count(p => p.Status == "Pending")</div>
                                <div class="stat-label">Pending</div>
                            </div>
                        </div>
                        <div class="col-lg-3 col-md-6 col-12 mb-3">
                            <div class="stat-card accepted">
                                <div class="stat-number">@Model.Count(p => p.Status == "Accepted")</div>
                                <div class="stat-label">Accepted</div>
                            </div>
                        </div>
                        <div class="col-lg-3 col-md-6 col-12 mb-3">
                            <div class="stat-card rejected">
                                <div class="stat-number">@Model.Count(p => p.Status == "Rejected")</div>
                                <div class="stat-label">Rejected</div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Applications List -->
                <div class="dashboard-container">
                    <!-- Filter Tabs -->
                    <div class="filter-tabs">
                        <button class="filter-tab active" onclick="filterApplications('all')">All Applications</button>
                        <button class="filter-tab" onclick="filterApplications('pending')">Pending</button>
                        <button class="filter-tab" onclick="filterApplications('accepted')">Accepted</button>
                        <button class="filter-tab" onclick="filterApplications('rejected')">Rejected</button>
                    </div>

                    <!-- Applications Container -->
                    <div id="applicationsContainer">
                        @foreach (var proposal in Model)
                        {
                            var statusClass = proposal.Status?.ToLower();
                            <div class="application-card" data-status="@statusClass">
                                @if (proposal.Status == "Accepted")
                                {
                                    <div class="success-indicator"></div>
                                }
                                <div class="application-header">
                                    <div class="job-info">
                                        <h3 class="job-title">@proposal.JobTitle</h3>
                                        @* <span class="job-category">@proposal.JobCategory</span> *@
                                    </div>
                                    <div class="application-status">
                                        <span class="status-badge status-@statusClass">@proposal.Status</span>
                                        @* <div class="application-date">Applied @proposal.DateSubmitted.ToString("MMM d, yyyy")</div> *@
                                    </div>
                                </div>

                                <div class="proposal-details">
                                    <div class="proposal-meta">
                                        <div class="meta-item">
                                            <i class="bi-cash"></i>
                                            <span class="proposed-price">@proposal.Price.ToString("C0")</span>
                                        </div>
                                    </div>
                                    <p class="proposal-message">@proposal.Message</p>
                                </div>
                                <div class="application-actions">
                                    <a href="@Url.Action("JobDetails", "Job", new { id = proposal.JobId })" class="action-btn btn-view-job">
                                        <i class="bi-eye"></i>
                                        View Job
                                    </a>
                                    @if (proposal.Status == "Pending")
                                    {
                                        @* <button class="action-btn btn-edit" onclick="editProposal(@proposal.JobId)">
                                            <i class="bi-pencil"></i>
                                            Edit Proposal
                                        </button> *@
                                        <button class="action-btn btn-withdraw" onclick="withdrawApplication(@proposal.JobId)">
                                            <i class="bi-x-circle"></i>
                                            Withdraw
                                        </button>
                                    }
                                    @if (proposal.Status == "Accepted")
                                    {
                                        <button class="action-btn btn-message" onclick="messageClient(@proposal.JobId)">
                                            <i class="bi-chat-dots"></i>
                                            Message Client
                                        </button>
                                    }
                                </div>
                            </div>
                        }
                    </div>

                    <!-- Empty State -->
                    @if (!Model.Any())
                    {
                        <div id="emptyState" class="empty-state">
                            <i class="bi-inbox"></i>
                            <h4>No Applications Found</h4>
                            <p>You haven't applied to any jobs yet. Start browsing and apply to jobs that match your skills!</p>
                            <a href="@Url.Action("Index", "Jobs")" class="browse-jobs-btn">
                                <i class="bi-search"></i>
                                Browse Jobs
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>

<script>
    // Sample freelancer applications data
    let freelancerApplications = [
        {
            id: 1,
            jobId: "job-1",
            jobTitle: "Senior React Developer",
            companyName: "TechCorp Solutions",
            category: "Technology",
            proposedPrice: 85000,
            deliveryTime: "3 months",
            location: "Remote",
            message: "I'm excited to work on your React project. With 6+ years of experience in React development, I can deliver a high-quality, scalable solution that meets all your requirements.",
            appliedDate: "5 days ago",
            status: "accepted",
            clientFeedback: "Great proposal! Your experience with React and previous projects look impressive. Looking forward to working with you."
        },
        {
            id: 2,
            jobId: "job-2",
            jobTitle: "UI/UX Designer",
            companyName: "Creative Agency Inc",
            category: "Design",
            proposedPrice: 65000,
            deliveryTime: "2 months",
            location: "New York, NY",
            message: "I specialize in creating intuitive and beautiful user interfaces. My design process focuses on user research, wireframing, and creating pixel-perfect designs that enhance user experience.",
            appliedDate: "2 days ago",
            status: "pending"
        },
        {
            id: 3,
            jobId: "job-3",
            jobTitle: "Full Stack Developer",
            companyName: "StartupXYZ",
            category: "Technology",
            proposedPrice: 95000,
            deliveryTime: "4 months",
            location: "Remote",
            message: "I'm a full-stack developer with expertise in both frontend and backend technologies. I can help you build a scalable web application from concept to deployment.",
            appliedDate: "1 day ago",
            status: "pending"
        },
        {
            id: 4,
            jobId: "job-4",
            jobTitle: "Mobile App Developer",
            companyName: "MobileFirst Ltd",
            category: "Technology",
            proposedPrice: 75000,
            deliveryTime: "3 months",
            location: "San Francisco, CA",
            message: "I have extensive experience in mobile app development using React Native and Flutter. I can create cross-platform apps that work seamlessly on both iOS and Android.",
            appliedDate: "1 week ago",
            status: "rejected",
            rejectionReason: "Thank you for your interest. We decided to go with a candidate who has more specific experience with our tech stack."
        },
        {
            id: 5,
            jobId: "job-5",
            jobTitle: "WordPress Developer",
            companyName: "Digital Marketing Pro",
            category: "Web Development",
            proposedPrice: 45000,
            deliveryTime: "6 weeks",
            location: "Remote",
            message: "I'm a WordPress expert with 5+ years of experience creating custom themes and plugins. I can help you build a professional website that meets all your business needs.",
            appliedDate: "2 weeks ago",
            status: "accepted",
            clientFeedback: "Perfect! Your WordPress portfolio is exactly what we're looking for. Let's get started!"
        }
    ];

    // Filter applications by status
    function filterApplications(status) {
        const applicationCards = document.querySelectorAll('.application-card');
        const filterTabs = document.querySelectorAll('.filter-tab');
        const applicationsContainer = document.getElementById('applicationsContainer');
        const emptyState = document.getElementById('emptyState');

        // Update active tab
        filterTabs.forEach(tab => tab.classList.remove('active'));
        event.target.classList.add('active');

        let visibleCount = 0;

        applicationCards.forEach(card => {
            const cardStatus = card.getAttribute('data-status');
            if (status === 'all' || cardStatus === status) {
                card.style.display = 'block';
                visibleCount++;
            } else {
                card.style.display = 'none';
            }
        });

        // Show empty state if no applications visible
        if (visibleCount === 0) {
            emptyState.style.display = 'block';
        } else {
            emptyState.style.display = 'none';
        }
    }

    // Edit proposal
    function editProposal(applicationId) {
        const application = freelancerApplications.find(app => app.id === applicationId);
        if (application && application.status === 'pending') {
            alert(`Edit proposal for: ${application.jobTitle}`);
            // In real app, redirect to edit proposal form
            // window.location.href = `edit-proposal.html?applicationId=${applicationId}`;
        } else {
            alert('You can only edit pending proposals.');
        }
    }

    // Withdraw application
    function withdrawApplication(applicationId) {
        const application = freelancerApplications.find(app => app.id === applicationId);
        if (application && application.status === 'pending') {
            if (confirm(`Are you sure you want to withdraw your application for "${application.jobTitle}"? This action cannot be undone.`)) {
                // Remove from data
                const index = freelancerApplications.findIndex(app => app.id === applicationId);
                if (index !== -1) {
                    freelancerApplications.splice(index, 1);
                }

                // Remove from DOM
                const applicationCard = document.querySelector(`[data-application-id="${applicationId}"]`);
                if (applicationCard) {
                    applicationCard.remove();
                }

                alert('Application withdrawn successfully.');
                updateStats();
            }
        } else {
            alert('You can only withdraw pending applications.');
        }
    }

    // Message client
    function messageClient(applicationId) {
        const application = freelancerApplications.find(app => app.id === applicationId);
        if (application && application.status === 'accepted') {
            alert(`Opening message thread with ${application.companyName}...`);
            // In real app, redirect to messaging system
            // window.location.href = `messages.html?jobId=${application.jobId}`;
        } else {
            alert('You can only message clients for accepted proposals.');
        }
    }

    // Update statistics
    function updateStats() {
        const totalApplications = freelancerApplications.length;
        const pendingApplications = freelancerApplications.filter(app => app.status === 'pending').length;
        const acceptedApplications = freelancerApplications.filter(app => app.status === 'accepted').length;
        const rejectedApplications = freelancerApplications.filter(app => app.status === 'rejected').length;

        document.getElementById('totalApplications').textContent = totalApplications;
        document.getElementById('pendingApplications').textContent = pendingApplications;
        document.getElementById('acceptedApplications').textContent = acceptedApplications;
        document.getElementById('rejectedApplications').textContent = rejectedApplications;
    }

    // Initialize page
    document.addEventListener('DOMContentLoaded', function () {
        updateStats();
    });
</script>